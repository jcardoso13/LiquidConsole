name: Build and Run

on:
  # workflow_dispatch:
  #   inputs:
  #     input-json:
  #       description: 'JSON file path'
  #       required: true
  #       type: string
  #     liquid-string:
  #       description: 'Liquid file path'
  #       required: true
  #       type: string
  workflow_call:
    inputs:
      input-json:
        description: 'JSON file path'
        required: true
        type: string
      liquid-string:
        description: 'Liquid file path'
        required: true
        type: string
    outputs:
      output-json:
        description: 'The output JSON file'
        value: ${{ jobs.build-and-run.outputs.output-json }}

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    outputs:
      #output-json: ${{ steps.upload-output.outputs.output-json }}
      output-json: ./output.json
    steps:
    - name: Clone Git Repo
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      run: |
            git clone https://x-access-token:${GITHUB_TOKEN}@github.com/jcardoso13/LiquidConsole.git
            cd ./LiquidConsole/
            pwd
            ls

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release --no-restore

    - name: Save input JSON to file
      run: |
            echo ${{ inputs.input-json }}
            cat ../${{ inputs.input-json }} > input.json
    #       echo "${{ inputs.input-json }}" | base64 --decode >> input.json

    - name: Save Liquid string to file
      run: |
           echo ${{ inputs.liquid-string }}
           cat ../${{ inputs.liquid-string }} > transform.liquid
    #      echo "${{ inputs.liquid-string }}" >> transform.liquid

    - name: Run the project
      run: dotnet run --configuration Release input.json transform.liquid ./output.json >> logs.txt

    - name: Upload Logs as artifact
      id: upload-output
      run: |
          pwd
          ls
          echo "## CloudLiquid Logs ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "```json" >> $GITHUB_STEP_SUMMARY
          cat ./output.json >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          cat ./logs.txt >> $GITHUB_STEP_SUMMARY
