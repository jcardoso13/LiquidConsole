name: Build and Run

on:
  # workflow_dispatch:
  #   inputs:
  #     input-json:
  #       description: 'JSON file path'
  #       required: true
  #       type: string
  #     liquid-string:
  #       description: 'Liquid file path'
  #       required: true
  #       type: string
  workflow_call:
    inputs:
      input-json:
        description: 'JSON file path'
        required: true
        type: string
      liquid-string:
        description: 'Liquid file path'
        required: true
        type: string
    outputs:
      output-json:
        description: 'The output JSON file'
        value: ${{ jobs.build-and-run.outputs.output-json }}

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    outputs:
      #output-json: ${{ steps.upload-output.outputs.output-json }}
      output-json: ./output.json
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Clone Git Repo
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      run: |
            git clone https://x-access-token:${GITHUB_TOKEN}@github.com/jcardoso13/LiquidConsole.git
            cd ./LiquidConsole/
            pwd
            ls

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./LiquidConsole

    - name: Build the project
      run: dotnet build --configuration Release --no-restore
      working-directory: ./LiquidConsole

    - name: Save input JSON to file
      run: |
            echo ${{ inputs.input-json }}
            cat ../${{ inputs.input-json }}
            cat ../${{ inputs.input-json }} > input.json
    #       echo "${{ inputs.input-json }}" | base64 --decode >> input.json
      working-directory: ./LiquidConsole

    - name: Save Liquid string to file
      run: |
           echo ${{ inputs.liquid-string }}
           cat ../${{ inputs.liquid-string }}
           cat ../${{ inputs.liquid-string }} > transform.liquid
    #      echo "${{ inputs.liquid-string }}" >> transform.liquid
      working-directory: ./LiquidConsole

    - name: Run the project
      run: dotnet run --configuration Release ./input.json ./transform.liquid ./output.json >> logs.txt
      working-directory: ./LiquidConsole

    - name: Upload Logs as artifact
      id: upload-output
      run: |
          pwd
          ls
          cat ./output.json | jq '.' > formatted_output.json
          echo "## CloudLiquid Logs ðŸš€" >> ./summary.md
          echo "### Input JSON" >> ./summary.md
          echo "\`\`\`json" >> ./summary.md
          cat ./input.json >> ./summary.md
          echo "\`\`\`" >> ./summary.md
          echo "" >> ./summary.md
          echo "### Liquid File" >> ./summary.md
          echo "\`\`\`" >> ./summary.md
          cat ./transform.liquid >> ./summary.md
          echo "\`\`\`" >> ./summary.md
          echo "### Output JSON" >> ./summary.md
          echo "\`\`\`json" >> ./summary.md
          cat ./formatted_output.json >> ./summary.md
          echo "\`\`\`" >> ./summary.md
          cat ./logs.txt >> ./summary.md
          cat ./summary.md
          cat ./summary.md > $GITHUB_STEP_SUMMARY

      working-directory: ./LiquidConsole

    - name: Upload output.json as artifact
      uses: actions/upload-artifact@v4
      with:
        name: output-json
        path: ./LiquidConsole/output.json

